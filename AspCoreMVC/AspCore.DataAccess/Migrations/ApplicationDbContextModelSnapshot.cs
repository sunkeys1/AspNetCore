// <auto-generated />
using System;
using AspCore.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspCore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserState")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 5, 31, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7824),
                            GroupId = 2,
                            Login = "boris2020",
                            Password = "123boris123",
                            UserState = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 5, 23, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7845),
                            GroupId = 1,
                            Login = "superadmin",
                            Password = "adminadmin1",
                            UserState = "Active"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 5, 30, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7849),
                            GroupId = 2,
                            Login = "serejenka",
                            Password = "imserge222",
                            UserState = "Blocked"
                        });
                });

            modelBuilder.Entity("AspCore.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("UsersGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Active",
                            CreatedDate = new DateTime(2023, 5, 31, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7991),
                            Description = "CSGO Lovers",
                            ImageUrl = "",
                            MemberId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "Blocked",
                            CreatedDate = new DateTime(2023, 5, 28, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7995),
                            Description = "Data miners",
                            ImageUrl = "",
                            MemberId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "Super Active",
                            CreatedDate = new DateTime(2023, 5, 13, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(7997),
                            Description = "Minecraft Enjoyers",
                            ImageUrl = "",
                            MemberId = 2
                        },
                        new
                        {
                            Id = 4,
                            Code = "Active",
                            CreatedDate = new DateTime(2023, 5, 18, 14, 42, 34, 540, DateTimeKind.Local).AddTicks(8000),
                            Description = "Starcraft Koreans",
                            ImageUrl = "",
                            MemberId = 3
                        });
                });

            modelBuilder.Entity("AspCore.Models.UserGroup", b =>
                {
                    b.HasOne("AspCore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
